{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///cookie-storage.min.js","webpack:///webpack/bootstrap a9e4c37ca9bb5da9418c","webpack:///./src/utils.js","webpack:///./src/cookie-storage.js","webpack:///./src/main.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isObject","toString","alterDate","options","arguments","length","undefined","opt","assign","date","Date","minutes","setMinutes","getMinutes","hours","setHours","getHours","days","setDate","getDate","months","setMonth","getMonth","years","setFullYear","getFullYear","setProperty","obj","descriptor","writable","checkEmpty","key","Error","buildExpirationString","_utils","toUTCString","buildMetadataFor","data","findCookie","cookie","nameEQ","trim","indexOf","initialize","api","prop","$cookie","split","forEach","index","substring","decodeURIComponent","document","set","default","setItem","path","metadata","expires","domain","encodeURIComponent","getItem","find","removeItem","clear","indexEQ","_classCallCheck","instance","Constructor","TypeError","tryParse","parsed","JSON","parse","e","copyKeys","storage","keys","_createClass","defineProperties","target","props","protoProps","staticProps","_cookieStorage","_cookieStorage2","bannedKeys","CookieStorage","test","stringify","_this"],"mappings":"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","file":"cookie-storage.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cookieStorage\"] = factory();\n\telse\n\t\troot[\"cookieStorage\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cookieStorage\"] = factory();\n\telse\n\t\troot[\"cookieStorage\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isObject = isObject;\nexports.alterDate = alterDate;\nexports.setProperty = setProperty;\nexports.checkEmpty = checkEmpty;\n/**\n * Determines whether a value is a plain object.\n *\n * @param  {any} value: the object to test\n * @return {boolean}\n */\nfunction isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Adds or subtracts date portions to the given date and returns the new date.\n *\n * @see https://gist.github.com/jherax/bbc43e479a492cc9cbfc7ccc20c53cd2\n *\n * @param  {object} options: It contains the date parts to add or remove, and can have the following properties:\n *         - {Date} date: if provided, this date will be affected, otherwise the current date will be used.\n *         - {number} minutes: minutes to add/subtract\n *         - {number} hours: hours to add/subtract\n *         - {number} days: days to add/subtract\n *         - {number} months: months to add/subtract\n *         - {number} years: years to add/subtract\n * @return {Date}\n */\nfunction alterDate() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var opt = Object.assign({}, options);\n  var d = opt.date instanceof Date ? opt.date : new Date();\n  if (+opt.minutes) d.setMinutes(d.getMinutes() + opt.minutes);\n  if (+opt.hours) d.setHours(d.getHours() + opt.hours);\n  if (+opt.days) d.setDate(d.getDate() + opt.days);\n  if (+opt.months) d.setMonth(d.getMonth() + opt.months);\n  if (+opt.years) d.setFullYear(d.getFullYear() + opt.years);\n  return d;\n}\n\n/**\n * Creates a non-enumerable read-only property.\n *\n * @param  {object} obj: the object to add the property\n * @param  {string} name: the name of the property\n * @param  {any} value: the value of the property\n * @return {void}\n */\nfunction setProperty(obj, name, value) {\n  var descriptor = {\n    configurable: false,\n    enumerable: false,\n    writable: false\n  };\n  if (typeof value !== 'undefined') {\n    descriptor.value = value;\n  }\n  Object.defineProperty(obj, name, descriptor);\n}\n\n/**\n * Validates if the key is not empty.\n * (null, undefined or empty string)\n *\n * @param  {string} key: keyname of an element in the storage mechanism\n * @return {void}\n */\nfunction checkEmpty(key) {\n  if (key == null || key === '') {\n    throw new Error('The key provided can not be empty');\n  }\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(0);\n\n/**\n * @private\n *\n * Proxy for document.cookie\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n *\n * @type {object}\n */\nvar $cookie = {\n  get: function get() {\n    return document.cookie;\n  },\n  set: function set(value) {\n    document.cookie = value;\n  },\n  data: {} };\n\n/**\n * @private\n *\n * Builds the expiration for the cookie.\n *\n * @see utils.alterDate(options)\n *\n * @param  {Date|object} date: the expiration date\n * @return {string}\n */\nfunction buildExpirationString(date) {\n  var expires = date instanceof Date ? (0, _utils.alterDate)({ date: date }) : (0, _utils.alterDate)(date);\n  return expires.toUTCString();\n}\n\n/**\n * @private\n *\n * Builds the string for the cookie's metadata.\n *\n * @param  {string} key: name of the metadata\n * @param  {object} data: metadata of the cookie\n * @return {string}\n */\nfunction buildMetadataFor(key, data) {\n  if (!data[key]) return '';\n  return '; ' + key + '=' + data[key];\n}\n\n/**\n * @private\n *\n * Finds an element in the array.\n *\n * @param  {string} cookie: key=value\n * @return {boolean}\n */\nfunction findCookie(cookie) {\n  var nameEQ = this.toString();\n  // prevent leading spaces before the key\n  return cookie.trim().indexOf(nameEQ) === 0;\n}\n\n/**\n * @private\n *\n * Create, read, and delete elements from document.cookie,\n * and implements the Web Storage interface.\n *\n * @return {object}\n */\nfunction cookieStorage() {\n  var api = {\n    setItem: function setItem(key, value, options) {\n      options = Object.assign({ path: '/' }, options);\n      // keep track of the metadata associated to the cookie\n      $cookie.data[key] = { path: options.path };\n      var metadata = $cookie.data[key];\n      if ((0, _utils.isObject)(options.expires) || options.expires instanceof Date) {\n        metadata.expires = buildExpirationString(options.expires);\n      }\n      if (options.domain && typeof options.domain === 'string') {\n        metadata.domain = options.domain.trim();\n      }\n      var expires = buildMetadataFor('expires', metadata);\n      var domain = buildMetadataFor('domain', metadata);\n      var path = buildMetadataFor('path', metadata);\n      var cookie = key + '=' + encodeURIComponent(value) + expires + domain + path;\n      $cookie.set(cookie);\n    },\n    getItem: function getItem(key) {\n      var value = null;\n      var nameEQ = key + '=';\n      var cookie = $cookie.get().split(';').find(findCookie, nameEQ);\n      if (cookie) {\n        // prevent leading spaces before the key name\n        value = cookie.trim().substring(nameEQ.length, cookie.length);\n        value = decodeURIComponent(value);\n      }\n      if (value === null) delete $cookie.data[key];\n      return value;\n    },\n    removeItem: function removeItem(key, options) {\n      var metadata = Object.assign({}, $cookie.data[key], options);\n      metadata.expires = { days: -1 };\n      api.setItem(key, '', metadata);\n      delete $cookie.data[key];\n    },\n    clear: function clear() {\n      var key = void 0,\n          indexEQ = void 0; // eslint-disable-line\n      $cookie.get().split(';').forEach(function (cookie) {\n        indexEQ = cookie.indexOf('=');\n        if (indexEQ > -1) {\n          key = cookie.substring(0, indexEQ);\n          // prevent leading spaces before the key\n          api.removeItem(key.trim());\n        }\n      });\n    }\n  };\n\n  return initialize(api);\n}\n\n/**\n * @private\n *\n * Copy the current items in the cookie storage.\n *\n * @param  {object} api: the storage mechanism to initialize\n * @return {object}\n */\nfunction initialize(api) {\n  // sets API members to read-only and non-enumerable\n  for (var prop in api) {\n    // eslint-disable-line\n    (0, _utils.setProperty)(api, prop);\n  }\n  // copies all existing elements in the storage\n  $cookie.get().split(';').forEach(function (cookie) {\n    var index = cookie.indexOf('=');\n    var key = cookie.substring(0, index).trim();\n    var value = cookie.substring(index + 1).trim();\n    if (key) api[key] = decodeURIComponent(value);\n  });\n  return api;\n}\n\n/**\n * @public API\n */\nexports.default = cookieStorage();\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _cookieStorage = __webpack_require__(1);\n\nvar _cookieStorage2 = _interopRequireDefault(_cookieStorage);\n\nvar _utils = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @private\n *\n * Keys not allowed for cookies.\n *\n * @type {RegExp}\n */\nvar bannedKeys = /^(?:expires|max-age|path|domain|secure)$/i;\n\n/**\n * @private\n *\n * Try to parse a value\n *\n * @param  {string} value: the value to parse\n * @return {any}\n */\nfunction tryParse(value) {\n  var parsed = void 0;\n  try {\n    parsed = JSON.parse(value);\n  } catch (e) {\n    parsed = value;\n  }\n  return parsed;\n}\n\n/**\n * @private\n *\n * Copies all existing keys in the cookieStorage.\n *\n * @param  {CookieStorage} obj: the object to where copy the keys\n * @param  {object} storage: the storage mechanism\n * @return {void}\n */\nfunction copyKeys(obj, storage) {\n  Object.keys(storage).forEach(function (key) {\n    obj[key] = tryParse(storage[key]);\n  });\n}\n\n/**\n * @private\n *\n * Implementation of the Web Storage interface.\n * It saves and retrieves values as JSON.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n *\n * @type {class}\n */\n\nvar CookieStorage = function () {\n\n  /**\n   * Creates an instance of CookieStorage.\n   *\n   * @memberOf CookieStorage\n   */\n  function CookieStorage() {\n    _classCallCheck(this, CookieStorage);\n\n    copyKeys(this, _cookieStorage2.default);\n  }\n\n  /**\n   * Stores a value given a key name.\n   *\n   * @param  {string} key: keyname of the storage\n   * @param  {any} value: data to save in the storage\n   * @param  {object} options: additional options for cookieStorage\n   * @return {void}\n   *\n   * @memberOf CookieStorage\n   */\n\n\n  _createClass(CookieStorage, [{\n    key: 'setItem',\n    value: function setItem(key, value, options) {\n      (0, _utils.checkEmpty)(key);\n      if (bannedKeys.test(key)) {\n        throw new Error('The key is a reserved word, therefore not allowed');\n      }\n      this[key] = value;\n      // prevents converting strings to JSON to avoid extra quotes\n      if (typeof value !== 'string') value = JSON.stringify(value);\n      _cookieStorage2.default.setItem(key, value, options);\n      // checks if the cookie was created, or delete it if the domain or path are not valid\n      if (_cookieStorage2.default.getItem(key) === null) {\n        delete this[key];\n      }\n    }\n\n    /**\n     * Retrieves a value by its key name.\n     *\n     * @param  {string} key: keyname of the storage\n     * @return {void}\n     *\n     * @memberOf CookieStorage\n     */\n\n  }, {\n    key: 'getItem',\n    value: function getItem(key) {\n      (0, _utils.checkEmpty)(key);\n      var value = _cookieStorage2.default.getItem(key);\n      if (value == null) {\n        delete this[key];\n        value = null;\n      } else {\n        value = tryParse(value);\n        this[key] = value;\n      }\n      return value;\n    }\n\n    /**\n     * Deletes a key from the storage.\n     *\n     * @param  {string} key: keyname of the storage\n     * @param  {object} options: additional options for cookieStorage\n     * @return {void}\n     *\n     * @memberOf CookieStorage\n     */\n\n  }, {\n    key: 'removeItem',\n    value: function removeItem(key, options) {\n      (0, _utils.checkEmpty)(key);\n      delete this[key];\n      _cookieStorage2.default.removeItem(key, options);\n    }\n\n    /**\n     * Removes all keys from the storage.\n     *\n     * @return {void}\n     *\n     * @memberOf CookieStorage\n     */\n\n  }, {\n    key: 'clear',\n    value: function clear() {\n      var _this = this;\n\n      Object.keys(this).forEach(function (key) {\n        delete _this[key];\n      }, this);\n      _cookieStorage2.default.clear();\n    }\n\n    /**\n     * Gets the number of data items stored in the storage object.\n     *\n     * @readonly\n     *\n     * @memberOf CookieStorage\n     */\n\n  }, {\n    key: 'length',\n    get: function get() {\n      return Object.keys(this).length;\n    }\n  }]);\n\n  return CookieStorage;\n}();\n\n/**\n * @public API\n */\n\n\nexports.default = new CookieStorage();\nmodule.exports = exports['default'];\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// cookie-storage.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a9e4c37ca9bb5da9418c","/**\n * Determines whether a value is a plain object.\n *\n * @param  {any} value: the object to test\n * @return {boolean}\n */\nexport function isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Adds or subtracts date portions to the given date and returns the new date.\n *\n * @see https://gist.github.com/jherax/bbc43e479a492cc9cbfc7ccc20c53cd2\n *\n * @param  {object} options: It contains the date parts to add or remove, and can have the following properties:\n *         - {Date} date: if provided, this date will be affected, otherwise the current date will be used.\n *         - {number} minutes: minutes to add/subtract\n *         - {number} hours: hours to add/subtract\n *         - {number} days: days to add/subtract\n *         - {number} months: months to add/subtract\n *         - {number} years: years to add/subtract\n * @return {Date}\n */\nexport function alterDate(options = {}) {\n  const opt = Object.assign({}, options);\n  const d = opt.date instanceof Date ? opt.date : new Date();\n  if (+opt.minutes) d.setMinutes(d.getMinutes() + opt.minutes);\n  if (+opt.hours) d.setHours(d.getHours() + opt.hours);\n  if (+opt.days) d.setDate(d.getDate() + opt.days);\n  if (+opt.months) d.setMonth(d.getMonth() + opt.months);\n  if (+opt.years) d.setFullYear(d.getFullYear() + opt.years);\n  return d;\n}\n\n/**\n * Creates a non-enumerable read-only property.\n *\n * @param  {object} obj: the object to add the property\n * @param  {string} name: the name of the property\n * @param  {any} value: the value of the property\n * @return {void}\n */\nexport function setProperty(obj, name, value) {\n  const descriptor = {\n    configurable: false,\n    enumerable: false,\n    writable: false,\n  };\n  if (typeof value !== 'undefined') {\n    descriptor.value = value;\n  }\n  Object.defineProperty(obj, name, descriptor);\n}\n\n/**\n * Validates if the key is not empty.\n * (null, undefined or empty string)\n *\n * @param  {string} key: keyname of an element in the storage mechanism\n * @return {void}\n */\nexport function checkEmpty(key) {\n  if (key == null || key === '') {\n    throw new Error('The key provided can not be empty');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","import {alterDate, isObject, setProperty} from './utils';\n\n/**\n * @private\n *\n * Proxy for document.cookie\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/cookie\n *\n * @type {object}\n */\nconst $cookie = {\n  get: () => document.cookie,\n  set: (value) => {\n    document.cookie = value;\n  },\n  data: {}, // metadata associated to the cookies\n};\n\n/**\n * @private\n *\n * Builds the expiration for the cookie.\n *\n * @see utils.alterDate(options)\n *\n * @param  {Date|object} date: the expiration date\n * @return {string}\n */\nfunction buildExpirationString(date) {\n  const expires = (date instanceof Date ?\n    alterDate({date}) :\n    alterDate(date)\n  );\n  return expires.toUTCString();\n}\n\n/**\n * @private\n *\n * Builds the string for the cookie's metadata.\n *\n * @param  {string} key: name of the metadata\n * @param  {object} data: metadata of the cookie\n * @return {string}\n */\nfunction buildMetadataFor(key, data) {\n  if (!data[key]) return '';\n  return `; ${key}=${data[key]}`;\n}\n\n/**\n * @private\n *\n * Finds an element in the array.\n *\n * @param  {string} cookie: key=value\n * @return {boolean}\n */\nfunction findCookie(cookie) {\n  const nameEQ = this.toString();\n  // prevent leading spaces before the key\n  return cookie.trim().indexOf(nameEQ) === 0;\n}\n\n/**\n * @private\n *\n * Create, read, and delete elements from document.cookie,\n * and implements the Web Storage interface.\n *\n * @return {object}\n */\nfunction cookieStorage() {\n  const api = {\n\n    setItem(key, value, options) {\n      options = Object.assign({path: '/'}, options);\n      // keep track of the metadata associated to the cookie\n      $cookie.data[key] = {path: options.path};\n      const metadata = $cookie.data[key];\n      if (isObject(options.expires) || options.expires instanceof Date) {\n        metadata.expires = buildExpirationString(options.expires);\n      }\n      if (options.domain && typeof options.domain === 'string') {\n        metadata.domain = options.domain.trim();\n      }\n      const expires = buildMetadataFor('expires', metadata);\n      const domain = buildMetadataFor('domain', metadata);\n      const path = buildMetadataFor('path', metadata);\n      const cookie = `${key}=${encodeURIComponent(value)}${expires}${domain}${path}`;\n      $cookie.set(cookie);\n    },\n\n    getItem(key) {\n      let value = null;\n      const nameEQ = `${key}=`;\n      const cookie = $cookie.get().split(';').find(findCookie, nameEQ);\n      if (cookie) {\n        // prevent leading spaces before the key name\n        value = cookie.trim().substring(nameEQ.length, cookie.length);\n        value = decodeURIComponent(value);\n      }\n      if (value === null) delete $cookie.data[key];\n      return value;\n    },\n\n    removeItem(key, options) {\n      const metadata = Object.assign({}, $cookie.data[key], options);\n      metadata.expires = {days: -1};\n      api.setItem(key, '', metadata);\n      delete $cookie.data[key];\n    },\n\n    clear() {\n      let key, indexEQ; // eslint-disable-line\n      $cookie.get().split(';').forEach((cookie) => {\n        indexEQ = cookie.indexOf('=');\n        if (indexEQ > -1) {\n          key = cookie.substring(0, indexEQ);\n          // prevent leading spaces before the key\n          api.removeItem(key.trim());\n        }\n      });\n    },\n  };\n\n  return initialize(api);\n}\n\n/**\n * @private\n *\n * Copy the current items in the cookie storage.\n *\n * @param  {object} api: the storage mechanism to initialize\n * @return {object}\n */\nfunction initialize(api) {\n  // sets API members to read-only and non-enumerable\n  for (let prop in api) { // eslint-disable-line\n    setProperty(api, prop);\n  }\n  // copies all existing elements in the storage\n  $cookie.get().split(';').forEach((cookie) => {\n    const index = cookie.indexOf('=');\n    const key = cookie.substring(0, index).trim();\n    const value = cookie.substring(index + 1).trim();\n    if (key) api[key] = decodeURIComponent(value);\n  });\n  return api;\n}\n\n/**\n * @public API\n */\nexport default cookieStorage();\n\n\n\n// WEBPACK FOOTER //\n// ./src/cookie-storage.js","import cookies from './cookie-storage';\nimport {checkEmpty} from './utils';\n\n/**\n * @private\n *\n * Keys not allowed for cookies.\n *\n * @type {RegExp}\n */\nconst bannedKeys = /^(?:expires|max-age|path|domain|secure)$/i;\n\n/**\n * @private\n *\n * Try to parse a value\n *\n * @param  {string} value: the value to parse\n * @return {any}\n */\nfunction tryParse(value) {\n  let parsed;\n  try {\n    parsed = JSON.parse(value);\n  } catch (e) {\n    parsed = value;\n  }\n  return parsed;\n}\n\n/**\n * @private\n *\n * Copies all existing keys in the cookieStorage.\n *\n * @param  {CookieStorage} obj: the object to where copy the keys\n * @param  {object} storage: the storage mechanism\n * @return {void}\n */\nfunction copyKeys(obj, storage) {\n  Object.keys(storage).forEach((key) => {\n    obj[key] = tryParse(storage[key]);\n  });\n}\n\n/**\n * @private\n *\n * Implementation of the Web Storage interface.\n * It saves and retrieves values as JSON.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/API/Storage\n *\n * @type {class}\n */\nclass CookieStorage {\n\n  /**\n   * Creates an instance of CookieStorage.\n   *\n   * @memberOf CookieStorage\n   */\n  constructor() {\n    copyKeys(this, cookies);\n  }\n\n  /**\n   * Stores a value given a key name.\n   *\n   * @param  {string} key: keyname of the storage\n   * @param  {any} value: data to save in the storage\n   * @param  {object} options: additional options for cookieStorage\n   * @return {void}\n   *\n   * @memberOf CookieStorage\n   */\n  setItem(key, value, options) {\n    checkEmpty(key);\n    if (bannedKeys.test(key)) {\n      throw new Error('The key is a reserved word, therefore not allowed');\n    }\n    this[key] = value;\n    // prevents converting strings to JSON to avoid extra quotes\n    if (typeof value !== 'string') value = JSON.stringify(value);\n    cookies.setItem(key, value, options);\n    // checks if the cookie was created, or delete it if the domain or path are not valid\n    if (cookies.getItem(key) === null) {\n      delete this[key];\n    }\n  }\n\n  /**\n   * Retrieves a value by its key name.\n   *\n   * @param  {string} key: keyname of the storage\n   * @return {void}\n   *\n   * @memberOf CookieStorage\n   */\n  getItem(key) {\n    checkEmpty(key);\n    let value = cookies.getItem(key);\n    if (value == null) {\n      delete this[key];\n      value = null;\n    } else {\n      value = tryParse(value);\n      this[key] = value;\n    }\n    return value;\n  }\n\n  /**\n   * Deletes a key from the storage.\n   *\n   * @param  {string} key: keyname of the storage\n   * @param  {object} options: additional options for cookieStorage\n   * @return {void}\n   *\n   * @memberOf CookieStorage\n   */\n  removeItem(key, options) {\n    checkEmpty(key);\n    delete this[key];\n    cookies.removeItem(key, options);\n  }\n\n  /**\n   * Removes all keys from the storage.\n   *\n   * @return {void}\n   *\n   * @memberOf CookieStorage\n   */\n  clear() {\n    Object.keys(this).forEach((key) => {\n      delete this[key];\n    }, this);\n    cookies.clear();\n  }\n\n  /**\n   * Gets the number of data items stored in the storage object.\n   *\n   * @readonly\n   *\n   * @memberOf CookieStorage\n   */\n  get length() {\n    return Object.keys(this).length;\n  }\n\n}\n\n/**\n * @public API\n */\nexport default new CookieStorage();\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}